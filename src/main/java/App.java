/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import java.util.*;
import spark.ModelAndView;
import spark.template.velocity.VelocityTemplateEngine;
import static spark.Spark.*;

public class App {
	public static void main(String[] args) {
		staticFileLocation("/public");
        String layout       = "templates/layout.vtl";
    	String layout_index = "templates/layout_index.vtl";

		get("/", (request, response) -> {
			Map<String, Object> model = new HashMap<String, Object>();
			model.put("view", "templates/index.vtl");
			return new ModelAndView(model, layout);
		}, new VelocityTemplateEngine());

		get("/add-sight", (request, response) -> {
			Map<String, Object> model = new HashMap<String, Object>();
			model.put("view", "templates/form-sight.vtl");
			return new ModelAndView(model, layout);
		}, new VelocityTemplateEngine());

		get("/add-animal", (request, response) -> {
			Map<String, Object> model = new HashMap<String, Object>();
			model.put("view", "templates/form-animal.vtl");
			return new ModelAndView(model, layout);
		}, new VelocityTemplateEngine());

		get("/add-endangered-animal", (request, response) -> {
			Map<String, Object> model = new HashMap<String, Object>();
			model.put("view", "templates/form-endangered-animal.vtl");
			return new ModelAndView(model, layout);
		}, new VelocityTemplateEngine());

		get("/spoted-animal", (request, response) -> {
			Map<String, Object> model = new HashMap<String, Object>();
			model.put("view", "templates/view-non-endangered.vtl");
			return new ModelAndView(model, layout);
		}, new VelocityTemplateEngine());

		get("/spoted-endangered", (request, response) -> {
			Map<String, Object> model = new HashMap<String, Object>();
			model.put("view", "templates/view-endangered.vtl");
			return new ModelAndView(model, layout);
		}, new VelocityTemplateEngine());

		// view all animals
		get("/view-all", (request, response) -> {
			Map<String, Object> model = new HashMap<String, Object>();

			model.put("animals", EndangeredAnimal.getAll());
			model.put("view", "templates/view-animals.vtl");

			return new ModelAndView(model, layout);
		}, new VelocityTemplateEngine());

		// view endangered animals
		get("/view-endangered", (request, response) -> {
			Map<String, Object> model = new HashMap<String, Object>();

			model.put("animals", EndangeredAnimal.getAllEndangered());
			model.put("view", "templates/view-endangered.vtl");
			
			return new ModelAndView(model, layout);
		}, new VelocityTemplateEngine());

		// add data to database
		post("/add-animal/new", (request, response) -> {
			Map<String, Object> model = new HashMap<String, Object>();

			String animalName = request.queryParams("name");

			Animal newAnimal = new Animal(animalName);
			newAnimal.save();
			
			model.put("view", "templates/view-animals.vtl");
			return new ModelAndView(model, layout);
		}, new VelocityTemplateEngine());

		post("/add-endangered/new", (request, response) -> {
			Map<String, Object> model = new HashMap<String, Object>();

			String animalName = request.queryParams("name");
			String animalAge = request.queryParams("age");
			String animalHealth = request.queryParams("healthy");

			EndangeredAnimal newAnimal = new EndangeredAnimal(animalName, animalAge, animalHealth);
			newAnimal.save();

			model.put("view", "templates/view-animals.vtl");
			return new ModelAndView(model, layout);
		}, new VelocityTemplateEngine());
	}
}
